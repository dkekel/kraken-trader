spring:
  devtools:
    restart:
      enabled: false
    livereload:
      enabled: false
  application:
    name: "kraken-trader"
  profiles:
    # Set default profiles
    # To use real trading, run with --spring.profiles.active=real-trading
    # To use live market data, run with --spring.profiles.active=live-data
    # To use CSV file data, run with --spring.profiles.active=csv-data
    # To use multi-regime optimization, run with --spring.profiles.active=multi-regime-optimization
    # Default is simulation-mode (paper trading with CSV data)
    default: simulation-mode
    group:
      simulation-mode: paper-trading,csv-data
      trading-mode: real-trading,live-data
      multi-regime-optimization: paper-trading,csv-data
  datasource:
    url: jdbc:h2:file:./data/db/kraken-trader;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: password
    driver-class-name: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  h2:
    console:
      enabled: true
      path: /h2-console

kraken:
  minvolume:
    sync:
      minutes: 60
  api:
    key: ${API_KEY}
    secret: ${API_SECRET}

# Paper trading configuration
paper:
  trading:
    initial:
      balance: 1000  # Initial paper trading balance in USD

# Optimization configuration
optimization:
  use-multi-regime: false  # Set to true to use multi-regime optimization

trading:
  resync:
    minutes: 30
  cooldown:
    minutes: 15
  circuit-breaker:
    max-consecutive-losses: 3
    max-loss-percent-in-period: 10.0
    circuit-open-minutes: 60
    test-trades-in-half-open: 2

# Profile-specific configurations
---
spring:
  config:
    activate:
      on-profile: multi-regime-optimization
optimization:
  use-multi-regime: true  # Enable multi-regime optimization for this profile

---
spring:
  config:
    activate:
      on-profile: conservative
trading:
  cooldown:
    minutes: 30
  circuit-breaker:
    max-consecutive-losses: 2
    max-loss-percent-in-period: 5.0
    circuit-open-minutes: 120

---
logging:
  level:
    ch.kekelidze.krakentrader.indicator.AdxIndicator: INFO
    ch.kekelidze.krakentrader.indicator.MovingAverageIndicator: info
    ch.kekelidze.krakentrader.indicator.SimpleMovingAverageDivergenceIndicator: info
    ch.kekelidze.krakentrader.indicator.MovingAverageDivergenceCrossOverIndicator: info
    ch.kekelidze.krakentrader.indicator.MFIIndicator: info
    ch.kekelidze.krakentrader.indicator.VolumeIndicator: info
    ch.kekelidze.krakentrader.indicator.RsiIndicator: info
    ch.kekelidze.krakentrader.indicator.RsiRangeIndicator: info
    ch.kekelidze.krakentrader.indicator.RiskManagementIndicator: info
    ch.kekelidze.krakentrader.indicator.MovingTrendIndicator: info
    ch.kekelidze.krakentrader.indicator.VolatilityIndicator: info

    ch.kekelidze.krakentrader.indicator.analyser.SupportResistanceAnalyser: info
    ch.kekelidze.krakentrader.indicator.analyser.VolatilityAnalyser: info
    ch.kekelidze.krakentrader.indicator.analyser.BollingerContractionAnalyser: info
    ch.kekelidze.krakentrader.indicator.analyser.TrendAnalyser: info

    ch.kekelidze.krakentrader.strategy.MovingAverageScalper: info
    ch.kekelidze.krakentrader.strategy.MultiIndexMomentumStrategy: info
    ch.kekelidze.krakentrader.strategy.MultiTimeFrameLowHighStrategy: info
    ch.kekelidze.krakentrader.strategy.ConsolidationStrategy: info
    ch.kekelidze.krakentrader.strategy.BuyLowSellHighStrategy: info

    ch.kekelidze.krakentrader.optimize.GeneticOptimizer: debug
    ch.kekelidze.krakentrader.optimize.MultiStrategyOptimizer: info

    ch.kekelidze.krakentrader.api.rest.service.KrakenAveragePriceService: info

    ch.kekelidze.krakentrader.backtester.service.BackTesterService: debug
    ch.kekelidze.krakentrader.api.websocket.KrakenWebSocketClient: info
    ch.kekelidze.krakentrader.api.websocket.service.KrakenWebSocketService: info

    ch.kekelidze.krakentrader.trade.service.TradeService: info
    ch.kekelidze.krakentrader.api.rest.service.PaperTradeKrakenApiService: info

---
spring:
  config:
    activate:
      on-profile: real-trading
logging:
  level:
    ch.kekelidze.krakentrader.indicator.MovingAverageIndicator: debug
    ch.kekelidze.krakentrader.indicator.SimpleMovingAverageDivergenceIndicator: debug
    ch.kekelidze.krakentrader.indicator.VolumeIndicator: debug
    ch.kekelidze.krakentrader.indicator.RsiRangeIndicator: debug
    ch.kekelidze.krakentrader.indicator.RiskManagementIndicator: debug
    ch.kekelidze.krakentrader.indicator.MovingTrendIndicator: debug
    ch.kekelidze.krakentrader.indicator.VolatilityIndicator: debug

    ch.kekelidze.krakentrader.indicator.analyser.TrendAnalyser: debug

    ch.kekelidze.krakentrader.strategy.BuyLowSellHighStrategy: debug

    ch.kekelidze.krakentrader.api.websocket.service.KrakenWebSocketService: debug
    ch.kekelidze.krakentrader.api.rest.service.KrakenApiService: debug

    ch.kekelidze.krakentrader.trade.service.TradeService: debug