spring:
  devtools:
    restart:
      enabled: false
    livereload:
      enabled: false
  application:
    name: "kraken-trader"
  profiles:
    # Set default profiles
    # To use real trading, run with --spring.profiles.active=real-trading
    # To use live market data, run with --spring.profiles.active=live-data
    # To use CSV file data, run with --spring.profiles.active=csv-data
    # Default is simulation-mode (paper trading with CSV data)
    default: simulation-mode
    group:
      simulation-mode: paper-trading,csv-data
      trading-mode: real-trading,live-data
  datasource:
    url: jdbc:h2:file:./data/db/kraken-trader;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: password
    driver-class-name: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  h2:
    console:
      enabled: true
      path: /h2-console

kraken:
  api:
    key: ${API_KEY}
    secret: ${API_SECRET}

# Paper trading configuration
paper:
  trading:
    initial:
      balance: 10000  # Initial paper trading balance in USD
logging:
  level:
    ch.kekelidze.krakentrader.indicator.AdxIndicator: INFO
    ch.kekelidze.krakentrader.indicator.MovingAverageIndicator: info
    ch.kekelidze.krakentrader.indicator.SimpleMovingAverageDivergenceIndicator: info
    ch.kekelidze.krakentrader.indicator.MovingAverageDivergenceCrossOverIndicator: info
    ch.kekelidze.krakentrader.indicator.MFIIndicator: info
    ch.kekelidze.krakentrader.indicator.PricePredictionIndicator: INFO
    ch.kekelidze.krakentrader.indicator.VolumeIndicator: info
    ch.kekelidze.krakentrader.indicator.RsiIndicator: info
    ch.kekelidze.krakentrader.indicator.RsiRangeIndicator: info
    ch.kekelidze.krakentrader.indicator.RiskManagementIndicator: info
    ch.kekelidze.krakentrader.indicator.MovingTrendIndicator: info
    ch.kekelidze.krakentrader.indicator.VolatilityIndicator: info

    ch.kekelidze.krakentrader.indicator.analyser.SupportResistanceAnalyser: info
    ch.kekelidze.krakentrader.indicator.analyser.VolatilityAnalyser: info
    ch.kekelidze.krakentrader.indicator.analyser.BollingerContractionAnalyser: info
    ch.kekelidze.krakentrader.indicator.analyser.TrendAnalyser: info

    ch.kekelidze.krakentrader.strategy.PricePredictionStrategy: INFO
    ch.kekelidze.krakentrader.strategy.MovingAverageScalper: info
    ch.kekelidze.krakentrader.strategy.MultiIndexMomentumStrategy: info
    ch.kekelidze.krakentrader.strategy.MultiTimeFrameLowHighStrategy: info
    ch.kekelidze.krakentrader.strategy.ConsolidationStrategy: info
    ch.kekelidze.krakentrader.strategy.BuyLowSellHighStrategy: info

    ch.kekelidze.krakentrader.optimize.GeneticOptimizer: info
    ch.kekelidze.krakentrader.optimize.MultiStrategyOptimizer: info

    ch.kekelidze.krakentrader.api.rest.service.KrakenAveragePriceService: info

    ch.kekelidze.krakentrader.backtester.service.BackTesterService: debug
    ch.kekelidze.krakentrader.api.websocket.KrakenWebSocketClient: info
    ch.kekelidze.krakentrader.api.websocket.service.KrakenWebSocketService: info

    ch.kekelidze.krakentrader.trade.service.TradeService: info
    ch.kekelidze.krakentrader.api.rest.service.PaperTradeKrakenApiService: info

  file:
    name: logs/kraken-trader.log
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss, Europe/Zurich} [%t] %-5level %logger{36} - %msg%n"
